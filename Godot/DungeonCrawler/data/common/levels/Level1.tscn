[gd_scene load_steps=10 format=2]

[ext_resource path="res://engine/level/LevelBase.tscn" type="PackedScene" id=1]
[ext_resource path="res://data/common/levels/ground.tres" type="TileSet" id=2]
[ext_resource path="res://data/common/levels/walls.tres" type="TileSet" id=3]
[ext_resource path="res://data/common/units/Ghoul.tscn" type="PackedScene" id=4]
[ext_resource path="res://engine/agent/EnemyAgent.gd" type="Script" id=5]
[ext_resource path="res://engine/level/Entrance.tscn" type="PackedScene" id=6]
[ext_resource path="res://data/Module1/items/HelmetBarbute.tscn" type="PackedScene" id=7]
[ext_resource path="res://data/common/items/Helmet.tscn" type="PackedScene" id=8]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D
class_name UnitBase


const _cellSize := Vector2(32, 32)

export (float) var _speed              = 5.0 setget _setSpeed

var requestedDirection                 := Vector2() setget setRequestedDirection
var _currentDirection                  := Vector2() setget setCurrentDirection
onready var _nameLabel                 :Label = $\"Name\"
onready var _movementTween             :Tween = $\"Pivot/Tween\"
onready var _pivot                     :Position2D


signal predelete()
signal changedPosition()
signal moved( direction ) # Vector2
signal clicked()


func _init():
	Debug.updateVariable(\"Unit count\", +1, true)


func _ready():
	_movementTween.playback_speed = _speed
# warning-ignore:return_value_discarded
	_movementTween.connect(\"tween_completed\", self, \"_onTweenFinished\")


func _exit_tree():
	setCurrentDirection(Vector2())
	_pivot.position = Vector2()


func _process(_delta):
	setNameLabel(name)	# TODO: set it once


func _physics_process(_delta):
	if _currentDirection or !requestedDirection:
		return

	assert( abs(requestedDirection.x) in [0, 1] and abs(requestedDirection.y) in [0, 1] )

	var movementVector : Vector2 = _makeMovementVector( requestedDirection )
	assert( movementVector )

	if test_move( transform, movementVector ):
		return

	setCurrentDirection( requestedDirection )

	position += movementVector
	emit_signal(\"changedPosition\")

	_movementTween.interpolate_property(
		_pivot,
		\"position\",
		- movementVector,
		Vector2(0, 0),
		movementVector.length() / _cellSize.x,
		Tween.TRANS_LINEAR,
		Tween.EASE_IN
		)
	_movementTween.start()


func _onTweenFinished(object : Object, key : NodePath):
	if _currentDirection && object == _pivot && key == \":position\":
		emit_signal(\"moved\", _currentDirection)
		setCurrentDirection(Vector2())


func _notification(what):
	if what == NOTIFICATION_INSTANCED:
		_pivot = $\"Pivot\"
	elif what == NOTIFICATION_PREDELETE:
		emit_signal( \"predelete\" )
		Debug.updateVariable(\"Unit count\", -1, true)


func _input_event(_viewport, event, _shape_idx):
	if event.is_action_pressed(\"ui_LMB\"):
		emit_signal(\"clicked\")


func die():
	queue_free()


func setNameLabel( newName ):
	_nameLabel.text = newName


func getIcon() -> Texture:
	return $\"Pivot/Sprite\".texture


func setRequestedDirection( direction : Vector2 ):
	requestedDirection = direction


func setCurrentDirection( direction : Vector2 ):
	_currentDirection = direction
	setRequestedDirection(Vector2())


func serialize():
	var dict := {
		\"position\" : position + _pivot.position,
		\"moveDir\" : _currentDirection,
		}
	return dict


func deserialize( saveDict : Dictionary ):
	set_position( Vector2(saveDict[\"position\"]) )

	if saveDict.has('moveDir'):
		var direction : Vector2 = saveDict[\"moveDir\"]
		if direction:
			setRequestedDirection(direction)


func _makeMovementVector( direction : Vector2 ) -> Vector2:
	var x_add = direction.x if direction.x <= 0 else _cellSize.x
	var x_target = int( (position.x + x_add) / _cellSize.x ) * _cellSize.x
	var x_diff = x_target - position.x

	var y_add = direction.y if direction.y <= 0 else _cellSize.y
	var y_target = int( (position.y + y_add) / _cellSize.y ) * _cellSize.y
	var y_diff = y_target - position.y

	return Vector2(x_diff, y_diff)


func _setSpeed( speed : float ) -> void:
	_speed = speed
	if _movementTween != null:
		_movementTween.playback_speed = speed
"

[node name="Level1" instance=ExtResource( 1 )]

[node name="Ground" parent="." index="0"]
tile_set = ExtResource( 2 )
tile_data = PoolIntArray( 65537, 3, 0, 65538, 3, 0, 65539, 3, 0, 65540, 4, 0, 65541, 3, 0, 65542, 3, 0, 65543, 3, 0, 65544, 3, 0, 65545, 3, 0, 131073, 3, 0, 131074, 3, 0, 131075, 3, 0, 131076, 3, 0, 131077, 2, 0, 131078, 2, 0, 131079, 3, 0, 131080, 2, 0, 131081, 2, 0, 196609, 3, 0, 196610, 3, 0, 196611, 3, 0, 196612, 3, 0, 196613, 3, 0, 196614, 3, 0, 196615, 3, 0, 196616, 3, 0, 196617, 2, 0, 262145, 3, 0, 262146, 3, 0, 262147, 2, 0, 262148, 3, 0, 262149, 3, 0, 262150, 2, 0, 262151, 0, 0, 262152, 3, 0, 262153, 2, 0, 327681, 3, 0, 327682, 3, 0, 327683, 0, 0, 327684, 3, 0, 327685, 3, 0, 327686, 3, 0, 327687, 3, 0, 327688, 3, 0, 327689, 2, 0, 393217, 2, 0, 393218, 2, 0, 393219, 2, 0, 393220, 2, 0, 393222, 2, 0, 393224, 2, 0, 393225, 2, 0, 458758, 3, 0 )

[node name="Walls" parent="." index="1"]
tile_set = ExtResource( 3 )
tile_data = PoolIntArray( 0, 0, 0, 1, 1, 0, 2, 2, 0, 3, 3, 0, 4, 0, 0, 5, 0, 0, 6, 2, 0, 7, 0, 0, 8, 0, 0, 9, 0, 0, 10, 0, 0, 65536, 0, 0, 65545, 6, 0, 65546, 3, 0, 131072, 0, 0, 131082, 3, 0, 196608, 0, 0, 196618, 3, 0, 262144, 2, 0, 262154, 2, 0, 327680, 0, 0, 327685, 3, 0, 327686, 5, 0, 327687, 3, 0, 327690, 0, 0, 393216, 0, 0, 393221, 2, 0, 393223, 0, 0, 393226, 0, 0, 458752, 3, 0, 458753, 3, 0, 458754, 3, 0, 458755, 3, 0, 458756, 3, 0, 458757, 3, 0, 458758, 4, 0, 458759, 3, 0, 458760, 3, 0, 458761, 3, 0, 458762, 3, 0 )

[node name="Ghoul" parent="Units" index="0" instance=ExtResource( 4 )]
position = Vector2( 288, 288 )
script = SubResource( 1 )

[node name="Agent" type="Node" parent="Units/Ghoul" index="3"]
script = ExtResource( 5 )

[node name="ToLevel2" parent="Entrances" index="0" instance=ExtResource( 6 )]
position = Vector2( 320, 128 )

[node name="Start" parent="Entrances" index="1" instance=ExtResource( 6 )]
modulate = Color( 0.691406, 0.613083, 0.613083, 1 )
position = Vector2( 128, 128 )

[node name="ColorRect" parent="Entrances/Start" index="5"]
visible = false

[node name="HelmetBarbute" parent="Items" index="0" instance=ExtResource( 7 )]
position = Vector2( 224, 160 )

[node name="Helmet" parent="Items" index="1" instance=ExtResource( 8 )]
position = Vector2( 416, 96 )

[editable path="Entrances/Start"]
